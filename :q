SCAMPER(1)             BSD General Commands Manual             SCAMPER(1)

NNAAMMEE
     ssccaammppeerr — parallel Internet measurement utility

SSYYNNOOPPSSIISS
     ssccaammppeerr [--??DDvv] [--cc _c_o_m_m_a_n_d] [--pp _p_p_s] [--ww _w_i_n_d_o_w] [--MM _m_o_n_i_t_o_r_n_a_m_e]
             [--ll _l_i_s_t_n_a_m_e] [--LL _l_i_s_t_i_d] [--CC _c_y_c_l_e_i_d] [--oo _o_u_t_f_i_l_e]
             [--FF _f_i_r_e_w_a_l_l] [--dd _d_e_b_u_g_f_i_l_e] [--ee _p_i_d_f_i_l_e] [--OO _o_p_t_i_o_n_s]
             [--ii _I_P_s | --II _c_m_d_s | --ff _f_i_l_e | --PP _p_o_r_t | --UU _u_n_i_x_-_d_o_m]

DDEESSCCRRIIPPTTIIOONN
     The ssccaammppeerr utility provides the ability to execute Internet mea‐
     surement techniques to IPv4 and IPv6 addresses, in parallel, to fill
     a specified packets-per-second rate.  Currently, ssccaammppeerr supports
     the well-known traceroute and ping techniques, as well as MDA
     traceroute, alias resolution, some parts of tbit, sting, and neigh‐
     bour discovery.

     ssccaammppeerr has four modes of operation.  First, ssccaammppeerr can be supplied
     a list of addresses on the command line with the --ii option.  ssccaammppeerr
     will then execute a command with each of the supplied addresses, in
     parallel, and output the results as each task completes.  Second,
     ssccaammppeerr can be supplied a list of addresses in a listfile, one
     address per line, using the --ff option.  Third, ssccaammppeerr can be sup‐
     plied a list of complete commands on the command line with the --II
     option.  Finally, ssccaammppeerr can be instructed to listen on a port
     specified with the --PP option only accessible on the local host, or
     on a unix domain socket specified with the --UU option, where it can
     take commands dynamically.

     The options are as follows:

     --?      prints a list of command line options and a synopsis of
             each.

     --vv      causes ssccaammppeerr to output version information and exit.

     --DD      With this option set, ssccaammppeerr will detach and become a dae‐
             mon.  Use with the --PP or --UU options.

     --cc _c_o_m_m_a_n_d
             specifies the command for ssccaammppeerr to use by default. The
             current choices for this option are:
               --  ddeeaalliiaass
               --  nneeiigghhbboouurrddiisscc
               --  ppiinngg
               --  ttrraaccee
               --  ttrraacceellbb
               --  ssnniiffff
               --  ssttiinngg
               --  ttbbiitt
             ssccaammppeerr uses trace by default.  The available commands and
             their options are documented below.

     --pp _p_p_s  specifies the target packets-per-second rate for ssccaammppeerr to
             reach.  By default, this value is 20.

     --ww _w_i_n_d_o_w
             specifies the maximum number of tasks that may be probed in
             parallel.  A value of zero places no upper limit.  By
             default, zero is used.

     --MM _m_o_n_i_t_o_r_n_a_m_e
             specifies the canonical name of machine where ssccaammppeerr is
             run.  This value is used when recording the output in a
             warts output file.

     --ll _l_i_s_t_n_a_m_e
             specifies the name of the list when run from the command
             line.  This value is used when recording the output in a
             warts output file.

     --LL _l_i_s_t_i_d
             specifies the numerical id of the list when run from the
             command line.  This value is used when recording the output
             in a warts output file.

     --CC _c_y_c_l_e_i_d
             specifies the numerical cycle id to begin with when run from
             the command line.  This value is used when recording the
             output in a warts output file.

     --oo _o_u_t_f_i_l_e
             specifies the default output file to write measurement
             results to.  By default, stdout is used.

     --FF _f_i_r_e_w_a_l_l
             specifies that scamper may use the firewall in measurements
             that require it.  To use the firewall on FreeBSD and MacOS X
             systems, pass ipfw here.

     --dd _d_e_b_u_g_f_i_l_e
             specifies a filename to write debugging messages to.  By
             default, no debugfile is used, though debugging output is
             sent to stderr if scamper is built for debugging.

     --ee _p_i_d_f_i_l_e
             specifies a file to write scamper's process ID to.  If scam‐
             per is built with privilege separation, the ID of the
             unprivileged process is written.

     --OO _o_p_t_i_o_n_s
             allows scamper's behaviour to be further tailored.  The cur‐
             rent choices for this option are:
               --  tteexxtt output results using plain text.  Suitable for
                  interactive use.
               --  wwaarrttss output results to a warts binary file.  Suitable
                  for archiving measurement results and for use by
                  researchers as it records details that cannot be easily
                  represented with the text option.
               --  ppllaanneettllaabb tell scamper it is running on a planetlab
                  system.  Necessary to use planetlab's safe raw sockets.
               --  rraawwttccpp tell scamper to use IPPROTO_RAW socket to send
                  IPv4 TCP probes, rather than a datalink socket.
               --  sseelleecctt tell scamper to use select(2) rather than
                  poll(2)
               --  kkqquueeuuee tell scamper to use kqueue(2) rather than
                  poll(2) on systems where kqueue(2) is available.
               --  eeppoollll tell scamper to use epoll(7) rather than poll(2)
                  on systems where epoll(7) is available.
               --  ttssppss the input file consists of a sequence of IP
                  addresses for pre-specified IP timestamps.
               --  ccmmddffiillee the input file consists of complete commands.
               --  ddllttss use timestamps from the datalink layer, if possi‐
                  ble.
               --  oouuttccooppyy write a copy of all data written by scamper
                  with the default output method.
               --  ddeebbuuggffiilleeaappppeenndd append to the debugfile specified with
                  the --dd option.  The default is to truncate the debug‐
                  file.

     --ii _I_P _1_._._N
             specifies the addresses to probe, on the command line, using
             the command specified with the --cc option.

     --ff _l_i_s_t_f_i_l_e
             specifies the input file to read for target addresses, one
             per line, and uses the command specified with the --cc option
             on each.

     --II _c_m_d_s_.
             specifies complete commands, including target addresses, for
             scamper to execute.

     --PP _p_o_r_t
             specifies that ssccaammppeerr provide a control socket listening on
             the specified port on the local host.

     --UU _u_n_i_x _d_o_m_a_i_n _s_o_c_k_e_t
             specifies that ssccaammppeerr provide a control socket listening on
             the specified socket in the unix domain.

TTRRAACCEE OOPPTTIIOONNSS
     The trace command is used for conducting traceroute.  The following
     variations of the traceroute(8) options are available:

     trace [--MMQQTT] [--cc _c_o_n_f_i_d_e_n_c_e] [--dd _d_p_o_r_t] [--ff _f_i_r_s_t_h_o_p] [--gg _g_a_p_l_i_m_i_t]
     [--GG _g_a_p_a_c_t_i_o_n] [--ll _l_o_o_p_s] [--LL _l_o_o_p_a_c_t_i_o_n] [--mm _m_a_x_t_t_l] [--pp _p_a_y_l_o_a_d]
     [--PP _m_e_t_h_o_d] [--qq _a_t_t_e_m_p_t_s] [--ss _s_p_o_r_t] [--SS _s_r_c_a_d_d_r] [--tt _t_o_s]
     [--UU _u_s_e_r_i_d] [--ww _w_a_i_t] [--WW _w_a_i_t_-_p_r_o_b_e] [--zz _g_s_s_-_e_n_t_r_y] [--ZZ _l_s_s_-_n_a_m_e]

     --cc _c_o_n_f_i_d_e_n_c_e
             specifies that a hop should be probed to a specified confi‐
             dence level (95% or 99%) to be sure the trace has seen all
             interfaces that will reply for that hop.

     --dd _d_p_o_r_t
             specifies the base destination port value to use for UDP-
             based and TCP-based traceroute methods.  For ICMP-paris,
             this option sets the ICMP checksum value.

     --ff _f_i_r_s_t_h_o_p
             specifies the TTL or HLIM value to begin probing with.  By
             default, a first hop of one is used.

     --gg _g_a_p_l_i_m_i_t
             specifies the number of unresponsive hops permitted until a
             check is made to see if the destination will respond.  By
             default, a gap limit of 5 hops is used.  Setting the gap
             limit to 0 disables the gap limit, but doing this is not
             recommended.

     --GG _g_a_p_a_c_t_i_o_n
             specifies what should happen if the gaplimit condition is
             met.  A value of 1 (default) means halt probing, while a
             value of 2 means send last-ditch probes.

     --mm _m_a_x_t_t_l
             specifies the maximum TTL or HLIM value that will be probed.
             By default, there is no restriction, apart from the 255 hops
             that the Internet protocols allow.

     --MM      specifies that path MTU discovery (PMTUD) should be
             attempted for the path when the initial traceroute com‐
             pletes.  ssccaammppeerr will not conduct PMTUD unless it is probing
             a responsive destination, as otherwise there is no way to
             distinguish all packets being lost from just big packets
             (larger than MTU) being lost.

     --ll _l_o_o_p_s
             specifies the maximum number of loops permitted until prob‐
             ing stops.  By default, a value of one is used.  A value of
             zero disables loop checking.

     --LL _l_o_o_p_a_c_t_i_o_n
             specifies the action to take when a loop is encountered.  A
             value of 1 tells scamper to probe beyond the first loop in
             the trace.

     --pp _p_a_y_l_o_a_d
             specifies the payload of the probe to use as a base.  The
             payload is specified in hexadecimal.  Note that the payload
             supplied is merely a base; the first 2 bytes may be modified
             to accomplish ICMP-Paris and UDP-Paris traceroute.

     --PP _m_e_t_h_o_d
             specifies the traceroute method to use.  ssccaammppeerr currently
             supports five different probe methods: UDP, ICMP, UDP-paris,
             ICMP-paris, TCP, and TCP-ACK.  By default, UDP-paris is
             used.

     --qq _a_t_t_e_m_p_t_s
             specifies the maximum number of attempts to obtain a
             response per hop.  By default, a value of two is used.

     --QQ      specifies that all allocated probes are sent, regardless of
             how many responses have been received.

     --ss _s_p_o_r_t
             specifies the source port value to use.  For ICMP-based
             methods, this option specifies the ICMP identifier to use.

     --SS _s_r_c_a_d_d_r
             specifies the source address to use in probes.  The address
             cannot be spoofed.

     --tt _t_o_s  specifies the value to set in the IP ToS/DSCP + ECN byte.
             By default, this byte is set to zero.

     --TT      specifies that time exceeded messages from the destination
             do not cause the trace to be defined as reaching the desti‐
             nation.

     --UU _u_s_e_r_i_d
             specifies an unsigned integer to include with the data col‐
             lected; the meaning of the user-id is entirely up to the
             user and has no effect on the behaviour of traceroute.

     --ww _w_a_i_t
             specifies how long to wait, in seconds, for a reply.  By
             default, a value of 5 is used.

     --WW _w_a_i_t_-_p_r_o_b_e
             specifies the minimum time to wait, in 10s of milliseconds,
             between sending consecutive probes.  By default the next
             probe is sent as soon as possible.

     --zz _g_s_s_-_e_n_t_r_y
             specifies an IP address to halt probing when encountered;
             used with the double-tree algorithm.

     --ZZ _l_s_s_-_n_a_m_e
             specifies the name of the local stop set to use when deter‐
             mining when to halt probing backwards; used with the double-
             tree algorithm.

PPIINNGG OOPPTTIIOONNSS
     The ping command is used for conducting ping.  The following varia‐
     tions of the ping(8) options are available:

     ping [--RR] [--BB _p_a_y_l_o_a_d] [--cc _p_r_o_b_e_c_o_u_n_t] [--CC _i_c_m_p_-_s_u_m] [--dd _d_p_o_r_t]
     [--FF _s_p_o_r_t] [--ii _w_a_i_t] [--mm _t_t_l] [--MM _M_T_U] [--oo _r_e_p_l_y_c_o_u_n_t] [--OO _o_p_t_i_o_n_s]
     [--pp _p_a_t_t_e_r_n] [--PP _m_e_t_h_o_d] [--ss _s_i_z_e] [--SS _s_r_c_a_d_d_r] [--TT _t_i_m_e_s_t_a_m_p]
     [--UU _u_s_e_r_i_d] [--zz _t_o_s]

     --BB _p_a_y_l_o_a_d
             specifies, in a hexadecimal string, the payload to include
             in each probe.

     --cc _p_r_o_b_e_c_o_u_n_t
             specifies the number of probes to send before exiting.  By
             default, a value of 4 is used.

     --CC _i_c_m_p_-_s_u_m
             specifies the ICMP checksum to use when sending a probe.
             The payload of each probe will be manipulated so that the
             checksum is valid.

     --dd _d_p_o_r_t
             specifies the destination port to use in each TCP/UDP probe.

     --FF _s_p_o_r_t
             specifies the source port to use in each TCP/UDP probe, and
             the ICMP ID to use in ICMP probes.

     --ii _w_a_i_t
             specifies the length of time to wait, in seconds, between
             probes.  By default, a value of 1 is used.

     --mm _t_t_l  specifies the TTL value to use for outgoing packets.  By
             default, a value of 64 is used.

     --MM _M_T_U  specifies a pseudo MTU value.  If the response packet is
             larger than the pseudo MTU, an ICMP packet too big (PTB)
             message is sent.

     --oo _r_e_p_l_y_c_o_u_n_t
             specifies the number of replies required at which time prob‐
             ing may cease.  By default, all probes are sent.

     --OO _o_p_t_i_o_n_s
             The current choices for this option are:
               --  ssppooooff specifies that the source address is to be
                  spoofed according to the address specified with the --SS
                  option.  The address scamper would otherwise use as the
                  source address is embedded in the payload of the probe.

     --pp _p_a_t_t_e_r_n
             specifies the pattern, in hex, to use in probes.  Up to 16
             bytes may be specified.  By default, each probe's bytes are
             zeroed.

     --PP _m_e_t_h_o_d
             specifies the type of ping packets to send.  By default,
             ICMP echo requests are sent.  Choices are: icmp-echo, icmp-
             time, tcp-ack, tcp-ack-sport, udp, and udp-dport.

     --RR      specifies that the record route IP option should be used.

     --ss _s_i_z_e
             specifies the size of the probes to send.  The probe size
             includes the length of the IP and ICMP headers.  By default,
             a probe size of 84 bytes is used for IPv4 pings, and 56
             bytes for IPv6 pings.

     --SS _s_r_c_a_d_d_r
             specifies the source address to use in probes.  The address
             can be spoofed if -O spoof is included.

     --TT _t_i_m_e_s_t_a_m_p
             specifies that an IP timestamp option be included.  The
             timestamp option can either be: tsprespec where IP addresses
             of devices of interest can be specified; tsonly, where time‐
             stamps are embedded by devices but no IP addresses are
             included; and tsandaddr, where timestamps and IP addresses
             are included by devices in the path.  See the examples sec‐
             tion for more information.

     --UU _u_s_e_r_i_d
             specifies an unsigned integer to include with the data col‐
             lected; the meaning of the user-id is entirely up to the
             user and has no effect on the behaviour of ping.

     --zz _t_o_s  specifies the value to use in the IPv4 ToS/DSCP + ECN byte.
             By default, this byte is set to zero.

DDEEAALLIIAASS OOPPTTIIOONNSS
     The dealias command is used to send probes for the purpose of alias
     resolution.  It supports the mercator technique, where aliases are
     inferred if a router uses a different address when sending an ICMP
     response; the ally technique, where aliases are inferred if a
     sequence of probes sent to alternating IP addresses yields responses
     with incrementing, interleaved IP-ID values; radargun, where probes
     are sent to a set of IP addresses in multiple rounds and aliases are
     inferred by post-processing the results; prefixscan, where an alias
     is searched in a prefix for a specified IP address; and bump, where
     two addresses believed to be aliases are probed in an effort to
     force their IP-ID values out of sequence.  The following options are
     available for the ssccaammppeerr dealias command:

     dealias [--dd _d_p_o_r_t] [--ff _f_u_d_g_e] [--mm _m_e_t_h_o_d] [--oo _r_e_p_l_y_c] [--OO _o_p_t_i_o_n]
     [--pp _p_r_o_b_e_-_o_p_t_i_o_n_s] [--qq _a_t_t_e_m_p_t_s] [--rr _w_a_i_t_-_r_o_u_n_d] [--ss _s_p_o_r_t] [--tt _t_t_l]
     [--UU _u_s_e_r_i_d] [--ww _w_a_i_t_-_t_i_m_e_o_u_t] [--WW _w_a_i_t_-_p_r_o_b_e] [--xx _e_x_c_l_u_d_e]

     --dd _d_p_o_r_t
             specifies the destination port to use when sending probes.
             Only valid for the mercator technique; destination ports can
             be specified in probedefs defined with --pp for other alias
             resolution methods.

     --ff _f_u_d_g_e
             specifies a fudge factor for alias matching. Defaults to
             200. Only valid for ally and bump.

     --mm _m_e_t_h_o_d
             specifies which method to use for alias resolution.  Valid
             options are: ally, bump, mercator, prefixscan, and radargun.

     --oo _r_e_p_l_y_c
             specifies how many replies to wait for. Only valid for pre‐
             fixscan.

     --OO _o_p_t_i_o_n
             allows alias resolution behaviour to be further tailored.
             The current choices for this option are:
               --  iinnsseeqq where IP-ID values are required to be strictly in
                  sequence (with no tolerance for packet reordering)
               --  sshhuuffffllee randomise the order of probes sent each round;
                  only valid for radargun probing.
               --  nnoobbss do not allow for byte swapped IP-ID values in
                  responses.  Valid for ally and prefixscan.

     --pp _p_r_o_b_e_d_e_f
             specifies a definition for a probe. Possible options are:

             --cc _s_u_m  specifies what ICMP checksum to use for ICMP probes.
                     The payload of the probe will be altered appropri‐
                     ately.

             --dd _d_s_t_-_p_o_r_t
                     specifies the destination port of the probe.
                     Defaults to 33435.

             --FF _s_r_c_-_p_o_r_t
                     specifies the source port of the probe.  Defaults to
                     (pid & 0x7fff) + 0x8000.

             --ii _I_P   specifies the destination IP address of the probe.

             --MM _m_t_u  specifies the psuedo MTU to use when soliciting
                     fragmented responses.

             --PP _m_e_t_h_o_d
                     specifies which method to use for the probe.  Valid
                     options are: udp, udp-dport, tcp-ack, tcp-ack-sport,
                     tcp-syn-sport, and icmp-echo.

             --ss _s_i_z_e
                     specifies the size of the probes to send.

             --tt _t_t_l  specifies the IP time to live of the probe.
             The ally method accepts up to two probe definitions; the
             prefixscan method expects one probe definition; radargun
             expects at least one probe definition; bump expects two
             probe definitions.

     --qq _a_t_t_e_m_p_t_s
             specifies how many times a probe should be retried if it
             does not obtain a useful response.

     --rr _w_a_i_t_-_r_o_u_n_d
             specifies how many milliseconds to wait between probing
             rounds with radargun.

     --ss _s_p_o_r_t
             specifies the source port to use when sending probes. Only
             valid for mercator.

     --tt _t_t_l  specifies the time-to-live of probes sent. Only valid for
             mercator.

     --UU _u_s_e_r_i_d
             specifies an unsigned integer to include with the data col‐
             lected; the meaning of the user-id is entirely up to the
             user and has no effect on the behaviour of dealias.

     --ww _w_a_i_t_-_t_i_m_e_o_u_t
             specifies how long to wait in milliseconds for a reply from
             the remote host.

     --WW _w_a_i_t_-_p_r_o_b_e
             specifies how long to wait in milliseconds between probes.

     --xx _e_x_c_l_u_d_e
             specifies an IP address to exclude when using the prefixscan
             method.  May be specified multiple times to exclude multiple
             addresses.

NNEEIIGGHHBBOOUURR DDIISSCCOOVVEERRYY OOPPTTIIOONNSS
     The neighbourdisc command attempts to find the layer-2 address of a
     given IP address using IPv4 ARP or IPv6 Neighbour Discovery.  The
     following options are availible for the ssccaammppeerr neighbourdisc com‐
     mand:

     neighbourdisc [--FFQQ] [--ii _i_n_t_e_r_f_a_c_e] [--oo _r_e_p_l_y_-_c_o_u_n_t] [--qq _a_t_t_e_m_p_t_s]
     [--ww _w_a_i_t]

     --FF      specifies that we only want the first response.

     --QQ      specifies that we want to send all attempts.

     --ii _i_n_t_e_r_f_a_c_e
             specifies the name of the interface to use for neighbour
             discovery.

     --oo _r_e_p_l_y_-_c_o_u_n_t
             specifies how many replies we wait for.

     --qq _a_t_t_e_m_p_t_s
             specifies how many probes we send out.

     --ww _w_a_i_t
             specifies how long to wait between probes in milliseconds.
             Defaults to 1000.

TTBBIITT OOPPTTIIOONNSS
     The tbit command can be used to infer TCP behaviour of a specified
     host.  At present, it implements tests to check the ability of the
     host to respond to ICMP Packet Too Big messages, and respond to
     Explicit Congestion Notification.  The following options are avail‐
     able for the ssccaammppeerr tbit command:

     tbit [--tt _t_y_p_e] [--pp _a_p_p] [--dd _d_p_o_r_t] [--ss _s_p_o_r_t] [--mm _m_s_s] [--MM _m_t_u]
     [--OO _o_p_t_i_o_n] [--PP _p_t_b_s_r_c] [--SS _s_r_c_a_d_d_r] [--uu _u_r_l]

     --tt _t_y_p_e       specifies which type of testing to use.  Valid options
                   are: pmtud, ecn, null, sack-rcvr.

     --pp _a_p_p        specifies what kind of traffic to generate for test‐
                   ing.  Destination port defaults the application stan‐
                   dard port.  Valid applications are: smtp, http, dns,
                   ftp.

     --dd _d_p_o_r_t      specifies the destination port for the packets being
                   sent.  Defaults are application-specific.

     --ss _s_p_o_r_t      specifies the source port for the packets being sent.
                   Default is based of the ssccaammppeerr process id.

     --mm _m_s_s        specifies the maximum segment size to advertise to the
                   remote host.

     --MM _m_t_u        specifies the MTU to use in a Packet Too Big message.

     --OO _o_p_t_i_o_n     allows tbit behaviour to be further tailored.  The
                   current choice for this option is:
                     --  bbllaacckkhhoollee for PMTUD testing, do not send Packet
                        Too Big messages; this tests to ability of a host
                        to infer a PMTUD blackhole and work around it.

     --PP _p_t_b_s_r_c     specifies the source address that should be used to
                   send Packet Too Big messages in the pmtud test.

     --SS _s_r_c_a_d_d_r    specifies the source address that should be used in
                   TCP packets sent by the tbit test.

     --uu _u_r_l        specifies a url for the http application.

TTRRAACCEELLBB OOPPTTIIOONNSS
     The tracelb command is used to infer all per-flow load-balanced
     paths between a source and destination.  The following options are
     available for the ssccaammppeerr tracelb command:

     tracelb [--cc _c_o_n_f_i_d_e_n_c_e] [--dd _d_p_o_r_t] [--ff _f_i_r_s_t_h_o_p] [--gg _g_a_p_l_i_m_i_t]
     [--PP _m_e_t_h_o_d] [--qq _a_t_t_e_m_p_t_s] [--QQ _m_a_x_p_r_o_b_e_c] [--ss _s_p_o_r_t] [--tt _t_o_s]
     [--UU _u_s_e_r_i_d] [--ww _w_a_i_t_-_t_i_m_e_o_u_t] [--WW _w_a_i_t_-_p_r_o_b_e]

     --cc _c_o_n_f_i_d_e_n_c_e
                   specifies the level of confidence we want to attain
                   that there are no more parallel load balanced paths at
                   a given hop.  Valid values are 95 (default) and 99,
                   for 95% confidence and 99% confidence respectively.

     --dd _d_p_o_r_t      specifies the base destination port to use. Defaults
                   to 33435, the default used by traceroute(8).

     --ff _f_i_r_s_t_h_o_p   specifies how many hops away we should start probing.

     --gg _g_a_p_l_i_m_i_t   specifies how many consecutive unresponsive hops are
                   permitted before probing down a branch halts.
                   Defaults to three.

     --PP _m_e_t_h_o_d     specifies which method we should use to do the prob‐
                   ing.  Valid options are: "udp-dport", "icmp-echo",
                   "udp-sport", "tcp-sport", and "tcp-ack-sport".
                   Defaults to "udp-dport".

     --qq _a_t_t_e_m_p_t_s   specifies how many probes we should send in an attempt
                   to receive a reply.  Defaults to 2.

     --QQ _m_a_x_p_r_o_b_e_c  specifies the maximum number of probes we ever want to
                   send.  Defaults to 3000.

     --ss _s_p_o_r_t      specfies to the source port to use when sending
                   probes.  Default based on process ID.

     --tt _t_o_s        specifies the value for the IP Type-of-service field
                   for outgoing probes.  Defaults to 0.

     --UU _u_s_e_r_i_d     specifies an unsigned integer to include with the data
                   collected; the meaning of the user-id is entirely up
                   to the user and has no effect on the behaviour of
                   tracelb.

     --ww _w_a_i_t_-_t_i_m_e_o_u_t
                   specifies in seconds how long to wait for a reply to a
                   probe. Defaults to 5.

     --WW _w_a_i_t_-_p_r_o_b_e
                   specifies in 1/100ths of seconds how long to wait
                   between probes.  Defaults to 25 (i.e. 250ms).

SSTTIINNGG OOPPTTIIOONNSS
     The sting command is used to infer one-way loss using an algorithm
     with TCP probes.  It requires the firewall be enabled in scamper
     using the --FF option.  The following options are available for the
     ssccaammppeerr sting command:

     sting [--cc _c_o_u_n_t] [--dd _d_p_o_r_t] [--ff _d_i_s_t_r_i_b_u_t_i_o_n] [--hh _r_e_q_u_e_s_t] [--HH _h_o_l_e]
     [--ii _i_n_t_e_r] [--mm _m_e_a_n] [--ss _s_p_o_r_t]

     --cc _c_o_u_n_t      specifies the number of samples to make.  By default
                   48 samples are sent, as this value is the current
                   default of the FreeBSD TCP reassembly queue length.
                   Sting 0.7 uses 100 samples.

     --dd _d_p_o_r_t      specifies the base destination port to use.  Defaults
                   to 80, the default port used by the HTTP protocol.

     --ff _d_i_s_t_r_i_b_u_t_i_o_n
                   specifies the delay distribution of samples.  By
                   default a uniform distribution is constructed.  Other
                   distributions are currently not implemented in scam‐
                   per's implementation of sting.

     --hh _r_e_q_u_e_s_t    specifies the default request to make.  Currently not
                   implemented.

     --HH _h_o_l_e       specifies the size of the initial hole left in the
                   request.  The default is 3 bytes, the same as
                   sting-0.7.

     --ii _i_n_t_e_r      specifies the inter-phase delay between data seeding
                   and hole filling, in milliseconds.  By default, sting
                   waits 2000ms between phases.

     --mm _m_e_a_n       specifies the mean rate to send packets in the data
                   phase, in milliseconds.  By default, sting waits 100ms
                   between probes.

     --ss _s_p_o_r_t      specfies to the source port to use when sending
                   probes.  Default is based on the process ID.

SSNNIIFFFF OOPPTTIIOONNSS
     The sniff command is used to capture packets matching a specific
     signature.  At present, the only supported signature is ICMP echo
     packets with a specific ID value, or packets containing such a
     quote.  The following options are available for the ssccaammppeerr sniff
     command:

     sting [--cc _l_i_m_i_t_-_p_k_t_c] [--GG _l_i_m_i_t_-_t_i_m_e] [--SS _i_p_a_d_d_r] [--UU _u_s_e_r_i_d]
     <expression>

     --cc _l_i_m_i_t_-_p_k_t_c
                   specifies the maximum number of packets to capture.

     --GG _l_i_m_i_t_-_t_i_m_e
                   specifies the maximum time, in seconds, to capture
                   packets.

     --SS _i_p_a_d_d_r     specifies the IP address that packets must arrive
                   using.  scamper uses the IP address to identify the
                   appropriate interface to listen for packets.

     --UU _u_s_e_r_i_d     specifies an unsigned integer to include with the data
                   collected; the meaning of the user-id is entirely up
                   to the user and has no effect on the behaviour of
                   sniff.

     The sole supported expression is icmp[icmpid] == X, where X is the
     ICMP-ID to select.

DDAATTAA CCOOLLLLEECCTTIIOONN FFEEAATTUURREESS
     ssccaammppeerr has two data output formats.  The first is a human-readable
     format suitable for one-off data collection and measurement.  The
     second, known as wwaarrttss, is a binary format that records much more
     meta-data and is more precise than the human-readable format.

     ssccaammppeerr is designed for Internet-scale measurement, where large
     lists of targets are supplied for probing.  ssccaammppeerr has the ability
     to probe multiple lists simultaneously, with each having a mix rate
     that specifies the priority of the list.  ssccaammppeerr can also make mul‐
     tiple cycles over a list of addresses.

     When writing output to a wwaarrttss file, ssccaammppeerr records details of the
     list and cycle that each measurement task belongs to.

CCOONNTTRROOLL SSOOCCKKEETT
     When started with the --PP option, ssccaammppeerr allows inter-process commu‐
     nication via a TCP socket bound to the supplied port on the local
     host.  This socket is useful for controlling the operation of a
     long-lived ssccaammppeerr process.  A client may interact with scamper by
     using telnet(1) to open a connection to the supplied port.

     The following control socket commands are available.

     eexxiitt
          The exit command closes the current control socket connection.

     aattttaacchh
          The attach command changes how ssccaammppeerr accepts and replies to
          commands, returning results straight over the control socket.
          See AATTTTAACCHH section below for details on which commands are
          accepted.

     ggeett _a_r_g_u_m_e_n_t
          The get command returns the current setting for the supplied
          argument.  Valid argument values are: holdtime, monitorname,
          pid, pps, sport, version.

     sseett _a_r_g_u_m_e_n_t _._._.
          The set command sets the current setting for the supplied argu‐
          ment.  Valid argument values are: holdtime, monitorname, pps.

     ssoouurrccee _a_r_g_u_m_e_n_t _._._.

          aadddd _a_r_g_u_m_e_n_t_s
               The ssoouurrccee aadddd command allows a new input source to be
               added.  It accepts the following arguments:

               nnaammee _s_t_r_i_n_g
                    The name of the source.  This parameter is mandatory.

               ddeessccrr _s_t_r_i_n_g
                    An optional string describing the source.

               ccoommmmaanndd _s_t_r_i_n_g
                    The command to execute for each address supplied.  If
                    not supplied, the default command is used.

               lliisstt__iidd _u_i_n_t_3_2___t
                    An optional numeric list identifier, assigned by a
                    human.  If not supplied, a value of zero is used.

               ccyyccllee__iidd _u_i_n_t_3_2___t
                    An optional numeric initial cycle identifier to use,
                    assigned by a human.  If not supplied, a value of one
                    is used.

               pprriioorriittyy _u_i_n_t_3_2___t
                    An optional numeric value that specifies the mix rate
                    of measurements from the source compared to other
                    sources.  If not supplied, a mix rate of one is used.
                    A value of zero causes the source to be created, but
                    not actively used.

               oouuttffiillee _s_t_r_i_n_g
                    The name of the output file to write results to, pre‐
                    viously defined with oouuttffiillee ooppeenn.  If not supplied,
                    the default output file is used.

               ffiillee _s_t_r_i_n_g
                    The name of the input file to read target addresses
                    from.  This parameter is mandatory if the source is a
                    managed source.

               ccyycclleess _i_n_t_e_g_e_r
                    The number of cycles to make over the target address
                    file.  If zero, ssccaammppeerr will loop indefinitely over
                    the file.  This parameter is ignored unless a managed
                    source is defined.

               aauuttoorreellooaadd [oonn | ooffff]
                    This parameter specifies if the target address file
                    should be re-read whenever a cycle is completed, or
                    if the same set of target addresses as the previous
                    cycle should be used.  If not specified, the file is
                    not automatically reloaded at cycle time.

          uuppddaattee _n_a_m_e _a_r_g_u_m_e_n_t_s
               The ssoouurrccee uuppddaattee command allows some properties of an
               existing source to be modified.  The source to update is
               specified with the _n_a_m_e parameter.  Valid parameters are:
               autoreload, cycles, and priority.

          lliisstt _._._.
               The ssoouurrccee lliisstt command provides a listing of all cur‐
               rently defined sources.  The optional third _n_a_m_e parameter
               restricts the listing to the source specified.

          ccyyccllee _n_a_m_e
               The ssoouurrccee ccyyccllee command manually inserts a cycle marker
               in an adhoc source.

          ddeelleettee _n_a_m_e
               The ssoouurrccee ddeelleettee command deletes the named source, if
               possible.

     oouuttffiillee _a_r_g_u_m_e_n_t _._._.
          The outfile commands provide the ability to manage output
          files.  It accepts the following arguments:

          ooppeenn _._._.
               The oouuttffiillee ooppeenn command allows a new output file to be
               defined.  It accepts the following parameters:

               nnaammee _a_l_i_a_s
                    The alias of the output file.  This parameter is
                    mandatory.

               ffiillee _s_t_r_i_n_g
                    The filename of the output file.  This parameter is
                    mandatory.

               mmooddee [ttrruunnccaattee | aappppeenndd]
                    How the file will be opened.  If the append mode is
                    used, any existing file with the specified name will
                    be appended to.  If the truncate mode is used, any
                    existing file will be truncated when it is opened.

          cclloossee _a_l_i_a_s
               The oouuttffiillee cclloossee command allows an existing output file
               to be closed.  The mandatory _a_l_i_a_s parameter specifies
               which output file to close.  An output file that is cur‐
               rently referenced is not able to be closed.  To close a
               file that is currently referenced, a new outfile must be
               opened, and then the oouuttffiillee sswwaapp command be used.

          sswwaapp _a_l_i_a_s_1 _a_l_i_a_s_2
               The oouuttffiillee sswwaapp command swaps the file associated with
               each output file.

          lliisstt
               The oouuttffiillee lliisstt command outputs a list of the existing
               outfiles.

     oobbsseerrvvee ssoouurrcceess
          This command allows for monitoring of source events.  When exe‐
          cuted, the control socket will then supply event notices when‐
          ever a source is added, updated, deleted, finished, or cycled.
          Each event is prefixed with a count of the number of seconds
          elapsed since the Unix epoch.  The following examples illus‐
          trate the event monitoring capabilities:

                EVENT 1169065640 source add name 'foo' list_id 5 priority
                1
                EVENT 1169065641 source update 'foo' priority 15
                EVENT 1169065642 source cycle 'bar' id 2
                EVENT 1169065650 source finish 'bar'
                EVENT 1169065661 source delete 'foo'

     sshhuuttddoowwnn _a_r_g_u_m_e_n_t
          The shutdown argument allows the ssccaammppeerr process to be exited
          cleanly.  The following arguments are supported

          ddoonnee
               The sshhuuttddoowwnn ddoonnee command requests that ssccaammppeerr shuts down
               when the current tasks, as well as all remaining cycles,
               have completed.

          fflluusshh
               The sshhuuttddoowwnn fflluusshh command requests that ssccaammppeerr flushes
               all remaining tasks queued with each list, finishes all
               current tasks, and then shuts down.

          nnooww  The sshhuuttddoowwnn nnooww command causes ssccaammppeerr to shutdown imme‐
               diately.  Unfinished tasks are purged.

          ccaanncceell
               The sshhuuttddoowwnn ccaanncceell command cancels any pending shutdown.

AATTTTAACCHH MMOODDEE
     In attach mode, none of the usual interactive mode commands are
     usable.  Instead, commands may be entered directly and results will
     be sent back directly over the control socket.  Commands are speci‐
     fied just as they would be with the -I flag for a command-line invo‐
     cation of ssccaammppeerr.  Replies are split into lines by single \n char‐
     acters and have one of the following formats:

     EERRRR _._._.
          A line staring with the 3 characters "ERR" indicate an error
          has occured.  The rest of the line will contain an error mes‐
          sage.

     OOKK _i_d_-_n_u_m
          A line with the 2 characters "OK" indicates that scamper has
          accepted the command.  ssccaammppeerr versions after 20110623 return
          an id number associated with the command, which allow the task
          to be halted by subsequently issuing a "halt" instruction.

     MMOORREE
          A line with just the 4 characters "MORE" indicates that scamper
          has the capacity to accept more probing commands to run in par‐
          allel.

     DDAATTAA _l_e_n_g_t_h
          A line starting with the 4 characters "DATA" follow by a space
          then a base-10 number indicates the start of result.  _l_e_n_g_t_h
          specifies the number of characters of the data, including new‐
          lines. The data is in binary warts format and uuencoded before
          transmission.

     To exit attached mode the client must send a single line containing
     "done".  To halt a command that has not yet completed, issue a
     "halt" instruction with the id number returned when the command was
     accepted as the sole parameter.

EEXXAAMMPPLLEESS
     To use the default traceroute command to trace the path to
     192.0.2.1:

          scamper -i 192.0.2.1

     To infer Path MTU changes in the network and associate them with a
     traceroute path:

          scamper -I "trace -P udp-paris -M 192.0.2.1"

     To use paris traceroute with ICMP probes, using 3 probes per hop,
     sending all probes, writing to a specified warts file:

          scamper -O warts -o file.warts -I "trace -P icmp-paris -q 3 -Q
          192.0.2.1"

     To ping a series of addresses defined in _f_i_l_e_n_a_m_e, probing each
     address 10 times:

          scamper -c "ping -c 10" _f_i_l_e_n_a_m_e

     Care must be taken with shell quoting when using commands with mul‐
     tiple levels of quoting, such as when giving a probe description
     with a dealias command.  The following sends UDP probes to alternat‐
     ing IP addresses, one second apart, and requires the IP-ID values
     returned to be strictly in sequence.

          scamper -O warts -o ally.warts -I "dealias -O inseq -W 1000 -m
          ally -p '-P udp -i 192.0.2.1' -p '-P udp -i 192.0.2.4'"

     Alternatively, the following accomplishes the same, but without
     specifying the UDP probe method twice.

          scamper -O warts -o ally.warts -I "dealias -O inseq -W 1000 -m
          ally -p '-P udp' 192.0.2.1 192.0.2.4"

     The following command scans 198.51.100.0/28 for a matching alias to
     192.0.2.4, but skips 198.51.100.3.

          scamper -O warts -o prefixscan.warts -I "dealias -O inseq -W
          1000 -m prefixscan -p '-P udp' -x 198.51.100.3 192.0.2.4
          198.51.100.0/28"

     The following uses UDP probes to enumerate all per-flow load-bal‐
     anced paths towards 192.0.2.6 to 99% confidence; it varies the
     source port with each probe.

          scamper -I "tracelb -P udp-sport -c 99 192.0.2.6"

SSEEEE AALLSSOO
     ping(8), traceroute(8), libscamperfile(3), sc_ally(1),
     sc_analysis_dump(1), sc_attach(1), sc_tracediff(1), sc_wartscat(1),
     sc_wartsdump(1), sc_warts2json(1), sc_warts2pcap(1),
     sc_warts2text(1),

     S. Savage, _S_t_i_n_g_: _a _T_C_P_-_b_a_s_e_d _N_e_t_w_o_r_k _M_e_a_s_u_r_e_m_e_n_t _T_o_o_l, 1999 USENIX
     Symposium on Internet Technologies and Systems.

     R. Govindan and H. Tangmunarunkit, _H_e_u_r_i_s_t_i_c_s _f_o_r _I_n_t_e_r_n_e_t _M_a_p
     _D_i_s_c_o_v_e_r_y, Proc. IEEE INFOCOM 2000.

     N. Spring, R. Mahajan, and D. Wetherall, _M_e_a_s_u_r_i_n_g _I_S_P _t_o_p_o_l_o_g_i_e_s
     _w_i_t_h _R_o_c_k_e_t_f_u_e_l, Proc. ACM SIGCOMM 2002.

     A. Medina, M. Allman, and S. Floyd, _M_e_a_s_u_r_i_n_g _t_h_e _e_v_o_l_u_t_i_o_n _o_f
     _t_r_a_n_s_p_o_r_t _p_r_o_t_o_c_o_l_s _i_n _t_h_e _I_n_t_e_r_n_e_t, Proc. ACM/SIGCOMM Internet
     Measurement Conference 2004.

     M. Luckie, K. Cho, and B. Owens, _I_n_f_e_r_r_i_n_g _a_n_d _D_e_b_u_g_g_i_n_g _P_a_t_h _M_T_U
     _D_i_s_c_o_v_e_r_y _F_a_i_l_u_r_e_s, Proc. ACM/SIGCOMM Internet Measurement
     Conference 2005.

     B. Donnet, P. Raoult, T. Friedman, and M. Crovella, _E_f_f_i_c_i_e_n_t
     _a_l_g_o_r_i_t_h_m_s _f_o_r _l_a_r_g_e_-_s_c_a_l_e _t_o_p_o_l_o_g_y _d_i_s_c_o_v_e_r_y, Proc. ACM SIGMETRICS
     2005.

     B. Augustin, X. Cuvellier, B. Orgogozo, F. Viger, T. Friedman, M.
     Latapy, C. Magnien, and R. Teixeira, _A_v_o_i_d_i_n_g _t_r_a_c_e_r_o_u_t_e _a_n_o_m_a_l_i_e_s
     _w_i_t_h _P_a_r_i_s _t_r_a_c_e_r_o_u_t_e, Proc. ACM/SIGCOMM Internet Measurement
     Conference 2006.

     B. Augustin, T. Friedman, and R. Teixeira, _M_e_a_s_u_r_i_n_g _L_o_a_d_-_b_a_l_a_n_c_e_d
     _P_a_t_h_s _i_n _t_h_e _I_n_t_e_r_n_e_t, Proc. ACM/SIGCOMM Internet Measurement
     Conference 2007.

     A. Bender, R. Sherwood, and N. Spring, _F_i_x_i_n_g _A_l_l_y_'_s _g_r_o_w_i_n_g _p_a_i_n_s
     _w_i_t_h _v_e_l_o_c_i_t_y _m_o_d_e_l_i_n_g, Proc. ACM/SIGCOMM Internet Measurement
     Conference 2008.

     M. Luckie, _S_c_a_m_p_e_r_: _a _S_c_a_l_a_b_l_e _a_n_d _E_x_t_e_n_s_i_b_l_e _P_a_c_k_e_t _P_r_o_b_e_r _f_o_r
     _A_c_t_i_v_e _M_e_a_s_u_r_e_m_e_n_t _o_f _t_h_e _I_n_t_e_r_n_e_t, Proc. ACM/SIGCOMM Internet
     Measurement Conference 2010.

AAUUTTHHOORRSS
     ssccaammppeerr is written by Matthew Luckie <mjl@luckie.org.nz>.  Alistair
     King contributed an initial implementation of Doubletree; Ben
     Stasiewicz contributed an initial implementation of TBIT's PMTUD
     test; Stephen Eichler contributed an initial implementation of
     TBIT's ECN test; Boris Pfahringer adapted ssccaammppeerr to use GNU auto‐
     tools, modularised the tests, and updated this man page.  Brian Ham‐
     mond of Internap Network Services Corporation provided an initial
     implementation of scamper's json output format.

AACCKKNNOOWWLLEEDDGGEEMMEENNTTSS
     ssccaammppeerr development was initially funded by the WIDE project in
     association with CAIDA.  Boris' work was funded by the University of
     Waikato's Centre for Open Source Innovation.

BSD                           March 8, 2011                           BSD
