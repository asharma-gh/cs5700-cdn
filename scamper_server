#!/usr/bin/python3

import socketserver
import socket
from collections import namedtuple
import threading
import struct
import random
import sys
import getopt
import subprocess


class ScamperServerRequestHandler(socketserver.BaseRequestHandler):
    def handle(self):
        data = self.request.recv(1024).strip()
        ip = data.strip()
        print("Got this IP: "+ str(ip))
        time = self.__get_time(ip.decode("UTF-8"))
        self.request.sendall(time.encode())

    def __get_time(self, ip):
        scamper_cmd = "scamper -c \'ping -c 1\' -i " + ip
        res = subprocess.getoutput(scamper_cmd)
        lines = res.split('\n')
        if (len(lines) < 5):
            return "99999"
        mline = lines[4]
        avg = mline[39:45]
        print("Average from this: " + avg)
        return avg


class ThreadedScamperServer(socketserver.ThreadingMixIn, socketserver.TCPServer):
    pass

class ScamperServerFront(object):
    server = 0
    def __init__(self, host, port):
        self.server = ThreadedScamperServer((host, port), ScamperServerRequestHandler)
        server_thread = threading.Thread(target=self.server.serve_forever)
        server_thread.daemon = True
        server_thread.start()
        print("Server started")

        self.server.serve_forever()

        self.server.shutdown()
        self.server.server_close()

if __name__ == "__main__":
    print("Starting scamper server")
    optlist, _ = getopt.getopt(sys.argv[1:], 'p:n:')
    for opt in optlist:
        if opt[0] == '-p':
            port = int(opt[1])
    foo = ScamperServerFront("", port)
